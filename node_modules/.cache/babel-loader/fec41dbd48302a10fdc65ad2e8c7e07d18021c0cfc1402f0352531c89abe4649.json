{"ast":null,"code":"import { API_BASE_URL } from \"../app-config\";\nconst ACCESS_TOKEN = \"ACCESS_TOKEN\";\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  let options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n  if (request) {\n    if (method === \"GET\") {\n      options.url += \"?\" + new URLSearchParams(request).toString();\n    } else {\n      options.body = JSON.stringify(request, getCircularReplacer());\n    } //getCircularReplacer 추가함\n  }\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n    return json;\n  })).catch(error => {\n    console.log(\"Oops!\");\n    console.log(error.status);\n    if (error.status === 403) {\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  });\n}\nexport function signin(userDTO) {\n  return call(\"/auth/signin\", \"POST\", userDTO).then(response => {\n    if (response.token) {\n      localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n      localStorage.setItem(\"USER_ID\", response.id); // USER_ID 저장\n      console.log(\"User ID saved:\", response.id);\n      window.location.href = \"/\";\n    }\n  });\n}\nexport function signup(userDTO) {\n  return call(\"/auth/signup\", \"POST\", userDTO).then(response => {\n    if (response.id) {\n      window.location.href = \"/\";\n    }\n  }).catch(error => {\n    console.log(\"Oops!\");\n    if (error.status === 403) {\n      window.location.href = \"/auth/signup\";\n    }\n    return Promise.reject(error);\n  });\n}\nexport function signout() {\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n  window.location.href = \"/\";\n}\n\n//추가\nexport function account() {\n  window.location.href = \"/account\";\n}\nexport function getUserInfo() {\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  const request = {\n    token: accessToken\n  };\n  return call(\"/auth/userinfo\", \"POST\", request).then(response => {\n    return response;\n  }).catch(error => {\n    console.log(\"사용자 정보를 가져오는데 실패했습니다:\", error);\n    return Promise.reject(error);\n  });\n}\nexport function delaccount() {\n  const userId = localStorage.getItem(\"USER_ID\"); // 사용자 ID를 로컬 스토리지나 다른 방법으로 가져옴\n  console.log(\"User ID to be deleted:\", userId);\n  if (!userId) {\n    console.error(\"User ID not found\");\n    return Promise.reject(\"User ID not found\");\n  }\n  const userDTO = {\n    id: userId\n  }; // ID만 포함하는 객체 생성\n  return call(\"/auth/delaccount\", \"POST\", userDTO)\n  // return call(\"/auth/delaccount\", \"POST\", { id: userId })\n  .then(response => {\n    if (response.message === \"User deleted successfully\") {\n      // return response;\n      localStorage.removeItem(\"ACCESS_TOKEN\"); //\n      localStorage.removeItem(\"USER_ID\"); //\n      localStorage.setItem(\"message\", \"회원 탈퇴가 성공적으로 완료되었습니다.\");\n      window.location.href = \"/login\"; //\n    } else {\n      console.error(\"회원 탈퇴 실패:\", response);\n      localStorage.setItem(\"message\", \"회원 탈퇴에 실패했습니다.\");\n      window.location.href = \"/login\";\n    }\n    return response; //\n  }).catch(error => {\n    console.log(\"[del_acc]Oops!\");\n    localStorage.setItem(\"message\", \"회원 탈퇴 중 오류가 발생했습니다.\");\n    console.log(error.status);\n    if (error.status === 403) {\n      window.location.href = \"/auth/delaccount\";\n    }\n    return Promise.reject(error);\n  });\n}\nfunction getCircularReplacer() {\n  const seen = new WeakSet();\n  return (key, value) => {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return;\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n}","map":{"version":3,"names":["API_BASE_URL","ACCESS_TOKEN","call","api","method","request","headers","Headers","accessToken","localStorage","getItem","append","options","url","URLSearchParams","toString","body","JSON","stringify","getCircularReplacer","fetch","then","response","json","ok","Promise","reject","catch","error","console","log","status","window","location","href","signin","userDTO","token","setItem","id","signup","signout","account","getUserInfo","delaccount","userId","message","removeItem","seen","WeakSet","key","value","has","add"],"sources":["C:/Users/heyan/바탕 화면/객패_플젝/object_workspace/src/service/ApiService.js"],"sourcesContent":["import { API_BASE_URL } from \"../app-config\";\r\nconst ACCESS_TOKEN = \"ACCESS_TOKEN\";\r\n\r\nexport function call(api, method, request) {\r\n    let headers = new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n    });\r\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n    if (accessToken) {\r\n        headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n    }\r\n\r\n    let options = {\r\n        headers: headers,\r\n        url: API_BASE_URL + api,\r\n        method: method,\r\n    };\r\n\r\n    if (request) {\r\n        if (method === \"GET\") {\r\n            options.url += \"?\" + new URLSearchParams(request).toString();\r\n        } else {\r\n            options.body = JSON.stringify(request, getCircularReplacer());\r\n        }//getCircularReplacer 추가함\r\n    }\r\n    return fetch(options.url, options)\r\n        .then((response) =>\r\n            response.json().then((json) => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(json);\r\n                }\r\n                return json;\r\n            })\r\n        )\r\n        .catch((error) => {\r\n            console.log(\"Oops!\");\r\n            console.log(error.status);\r\n            if (error.status === 403) {\r\n                window.location.href = \"/login\";\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n}\r\n\r\nexport function signin(userDTO) {\r\n    return call(\"/auth/signin\", \"POST\", userDTO)\r\n        .then((response) => {\r\n            if (response.token) {\r\n                localStorage.setItem(\"ACCESS_TOKEN\", response.token);\r\n                localStorage.setItem(\"USER_ID\", response.id); // USER_ID 저장\r\n                console.log(\"User ID saved:\", response.id);\r\n                window.location.href = \"/\";\r\n            }\r\n        });\r\n}\r\n\r\nexport function signup(userDTO) {\r\n    return call(\"/auth/signup\", \"POST\", userDTO)\r\n        .then((response) => {\r\n            if (response.id) {\r\n                window.location.href = \"/\";\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Oops!\");\r\n            if (error.status === 403) {\r\n                window.location.href = \"/auth/signup\";\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n}\r\n\r\nexport function signout() {\r\n    localStorage.setItem(\"ACCESS_TOKEN\", null);\r\n    window.location.href = \"/\";\r\n}\r\n\r\n//추가\r\nexport function account(){\r\n    window.location.href=\"/account\";\r\n}\r\n\r\nexport function getUserInfo() {\r\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n    const request = { token: accessToken };\r\n    return call(\"/auth/userinfo\", \"POST\", request)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"사용자 정보를 가져오는데 실패했습니다:\", error);\r\n            return Promise.reject(error);\r\n        });\r\n}\r\nexport function delaccount() {\r\n    const userId = localStorage.getItem(\"USER_ID\"); // 사용자 ID를 로컬 스토리지나 다른 방법으로 가져옴\r\n    console.log(\"User ID to be deleted:\", userId);\r\n    if (!userId) {\r\n        console.error(\"User ID not found\");\r\n        return Promise.reject(\"User ID not found\");\r\n    }\r\n\r\n    const userDTO = { id: userId }; // ID만 포함하는 객체 생성\r\n    return call(\"/auth/delaccount\", \"POST\", userDTO)\r\n    // return call(\"/auth/delaccount\", \"POST\", { id: userId })\r\n    .then((response) => {\r\n        if (response.message === \"User deleted successfully\") {\r\n            // return response;\r\n            localStorage.removeItem(\"ACCESS_TOKEN\");//\r\n            localStorage.removeItem(\"USER_ID\");//\r\n            localStorage.setItem(\"message\", \"회원 탈퇴가 성공적으로 완료되었습니다.\");\r\n            window.location.href = \"/login\";//\r\n        }else {\r\n            console.error(\"회원 탈퇴 실패:\", response);\r\n            localStorage.setItem(\"message\", \"회원 탈퇴에 실패했습니다.\");\r\n            window.location.href = \"/login\";\r\n        }\r\n        return response;//\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"[del_acc]Oops!\");\r\n        localStorage.setItem(\"message\", \"회원 탈퇴 중 오류가 발생했습니다.\");\r\n        console.log(error.status);\r\n        if (error.status === 403) {\r\n            window.location.href = \"/auth/delaccount\";\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n}\r\n\r\nfunction getCircularReplacer() {\r\n    const seen = new WeakSet();\r\n    return (key, value) => {\r\n        if (typeof value === \"object\" && value !== null) {\r\n            if (seen.has(value)) {\r\n                return;\r\n            }\r\n            seen.add(value);\r\n        }\r\n        return value;\r\n    };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}